name: Continuous Delivery Pipeline For Weaviate

on:
  push:
    branches:
      - main
    paths:
      - "app/weaviate/**"
  workflow_dispatch:

jobs:
  ci-cd:
    name: Continuous Delivery Pipeline For Weaviate
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Switch to main branch
        run: |
          git checkout main
          git pull origin main
        if: success()

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        if: success()

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
        if: success()

      - name: Create .env file
        run: |
          cat <<EOF > app/weaviate/.env
          OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}
          WEAVIATE_URL=${{ secrets.WEAVIATE_URL }}
          WEAVIATE_API_KEY=${{ secrets.WEAVIATE_API_KEY }}
          WEAVIATE_CLASS=${{ secrets.WEAVIATE_CLASS }}
          OPENAI_MODEL=${{ secrets.OPENAI_MODEL }}
          OPENAI_TEMPERATURE=${{ secrets.OPENAI_TEMPERATURE }}
          AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_SESSION_TOKEN=${{ secrets.AWS_SESSION_TOKEN }}
          AWS_REGION=${{ secrets.AWS_REGION }}
          WEAVIATE_LOG_GROUP=${{ secrets.WEAVIATE_LOG_GROUP }}
          WEAVIATE_LOG_STREAM=${{ secrets.WEAVIATE_LOG_STREAM }}
          PORT=${{ secrets.PORT }}
          DEBUG=${{ secrets.DEBUG }}
          EOF
        if: success()

      - name: Build and Push Docker Image To DockerHub
        run: |
          docker build -t st125052/mlops-final-project:latest-deployment .
          docker push st125052/mlops-final-project:latest-deployment
        working-directory: ./app/weaviate
        if: success()

      - name: Install SSH Client and Pass
        run: sudo apt-get update && sudo apt-get install -y openssh-client sshpass
        if: success()

      - name: Add Server to Known Hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.FLASK_SERVER_IP }} >> ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts
        if: success()

      - name: Deploy via SSH
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.FLASK_SERVER_IP }}
          port: ${{ secrets.FLASK_SERVER_PORT }}
          username: ${{ secrets.FLASK_SSH_USERNAME }}
          key: ${{ secrets.FLASK_SSH_PRIVATE_KEY }}
          script: |
            docker compose down
            docker images -q st125052/mlops-final-project | xargs -r docker rmi -f;
            docker compose up -d
        if: success()