name: Continuous Delivery Pipeline For Server

on:
  push:
    branches:
      - main
    paths:
      - 'app/server/**'
  workflow_dispatch:

jobs:
  ci-cd:
    name: Continuous Delivery for Server
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Switch to main branch
        run: |
          git checkout main
          git pull origin main
        if: success()
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        if: success()

      - name: Login to Heroku Container Registry
        uses: docker/login-action@v2
        with:
          registry: registry.heroku.com
          username: _
          password: ${{ secrets.HEROKU_API_KEY }}
        if: success()

      - name: Create .env file
        run: |
          cat <<EOF > app/server/.env
          VITE_JWT_SECRET_KEY=${{ secrets.VITE_JWT_SECRET_KEY }}
          AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_SESSION_TOKEN=${{ secrets.AWS_SESSION_TOKEN }}
          AWS_REGION=${{ secrets.AWS_REGION }}
          DYNAMODB_USERS_TABLE=${{ secrets.DYNAMODB_USERS_TABLE }}
          DYNAMODB_CHAT_TABLE=${{ secrets.DYNAMODB_CHAT_TABLE }}
          DYNAMODB_ARTICLES_TABLE=${{ secrets.DYNAMODB_ARTICLES_TABLE }}
          FRONTEND_URLS=${{ secrets.FRONTEND_URLS }}
          QUERY_TASK_API_URL=${{ secrets.QUERY_TASK_API_URL }}
          SERVER_LOG_GROUP=${{ secrets.SERVER_LOG_GROUP }}
          SERVER_LOG_STREAM=${{ secrets.SERVER_LOG_STREAM }}
          PORT=${{ secrets.PORT }}
          DEBUG=${{ secrets.DEBUG }}
          EOF
        if: success()
      - name: Build and Push Docker Image To HCR
        run: |
          docker build -t registry.heroku.com/mlops-final-project-server/web .
          docker push registry.heroku.com/mlops-final-project-server/web
        working-directory: ./app/server
        if: success()

      - name: Release the Container
        run: |
          curl https://cli-assets.heroku.com/install.sh | sh
          heroku container:release web --app mlops-final-project-server
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        if: success()